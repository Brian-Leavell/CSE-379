SW1_Handler:

  PUSH {lr}
  PUSH {r0,r1,r2,r3}
  
  ;clear the flag here pls thx
  MOV r0, #0x5000			;Load port F address
  MOVT r0, #0x4002
  ;Clear intterupt flag for SW1 Tiva to allow a different interrupt to activate if needed
  LDRB r1, [r0,#0x41C]
  ORR r1, r1, #0x10
  STRB r1, [r0, #0x41C]

  ldr r0, ptr_to_pause_bool		;checks to see if game is paused currently or not
  LDRB r1, [r0]
  
  ORN r1, r1, #0
  
  CMP r1, #1		;user has pushed the sw1 button to pause the game
  BEQ pause_it
  B resume
  
pause_it:
  
  ;Disables timer by writing a 0 to bit 0
  MOV r0, #0x0000
  MOVT r0, #0x4003
  LDRB r1, [r0, #0x00C]
  BFC r1, #0, #1
  STRB r1, [r0, #0x00C]
  
  ;Turns the RGB LED blue
  MOV r0, #2
  BL illuminate_RGB_LED
  
  ldr r0, ptr_to_pause_prompt
  ldr r1, ptr_to_bored
  ADD r1, r1, #352  ;Offset to place prompt towards the bottom of the screen\
  STR r0, [r1]  ;Writes pause to the screen
 


resume: 
   
  ;Enables timer by writing a 1 to bit 0
  MOV r0, #0x0000
  MOVT r0, #0x4003
  LDRB r1, [r0, #0x00C]
  ORR r1, r1, #1
  STRB r1, [r0, #0x00C]
  
 ;Turns the RGB LED off 
  MOV r0, #0
  BL illuminate_RGB_LED
  
  ldr r0, ptr_to_resume   ;All spaces which will remove the PAUSED from the screen
  ldr r1, ptr_to_bored
  ADD r1, r1, #352        ;Offset to where prompt is on the board
  STR r0, [r1]            ;Clears pause from the screen
  
end:
  
  POP {r0,r1,r2,r3}
  POP {lr}
  MOV pc, lr
